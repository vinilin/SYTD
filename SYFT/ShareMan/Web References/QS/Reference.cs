//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3603
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.3603 版自动生成。
// 
#pragma warning disable 1591

namespace ShareMan.QS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QueriesSoap", Namespace="http://localhost/QS")]
    public partial class Queries : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySrvIpOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryActInterSrvOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Queries() {
            this.Url = global::ShareMan.Properties.Settings.Default.ShareMan_QS_Queries;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueryUrlCompletedEventHandler QueryUrlCompleted;
        
        /// <remarks/>
        public event QuerySrvIpCompletedEventHandler QuerySrvIpCompleted;
        
        /// <remarks/>
        public event QueryActInterSrvCompletedEventHandler QueryActInterSrvCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/QS/QueryUrl", RequestNamespace="http://localhost/QS", ResponseNamespace="http://localhost/QS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryUrl(string ip, ServiceType srvType) {
            object[] results = this.Invoke("QueryUrl", new object[] {
                        ip,
                        srvType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUrlAsync(string ip, ServiceType srvType) {
            this.QueryUrlAsync(ip, srvType, null);
        }
        
        /// <remarks/>
        public void QueryUrlAsync(string ip, ServiceType srvType, object userState) {
            if ((this.QueryUrlOperationCompleted == null)) {
                this.QueryUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUrlOperationCompleted);
            }
            this.InvokeAsync("QueryUrl", new object[] {
                        ip,
                        srvType}, this.QueryUrlOperationCompleted, userState);
        }
        
        private void OnQueryUrlOperationCompleted(object arg) {
            if ((this.QueryUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUrlCompleted(this, new QueryUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/QS/QuerySrvIp", RequestNamespace="http://localhost/QS", ResponseNamespace="http://localhost/QS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QuerySrvIp(string subCode) {
            object[] results = this.Invoke("QuerySrvIp", new object[] {
                        subCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySrvIpAsync(string subCode) {
            this.QuerySrvIpAsync(subCode, null);
        }
        
        /// <remarks/>
        public void QuerySrvIpAsync(string subCode, object userState) {
            if ((this.QuerySrvIpOperationCompleted == null)) {
                this.QuerySrvIpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySrvIpOperationCompleted);
            }
            this.InvokeAsync("QuerySrvIp", new object[] {
                        subCode}, this.QuerySrvIpOperationCompleted, userState);
        }
        
        private void OnQuerySrvIpOperationCompleted(object arg) {
            if ((this.QuerySrvIpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySrvIpCompleted(this, new QuerySrvIpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/QS/QueryActInterSrv", RequestNamespace="http://localhost/QS", ResponseNamespace="http://localhost/QS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryActInterSrv() {
            object[] results = this.Invoke("QueryActInterSrv", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryActInterSrvAsync() {
            this.QueryActInterSrvAsync(null);
        }
        
        /// <remarks/>
        public void QueryActInterSrvAsync(object userState) {
            if ((this.QueryActInterSrvOperationCompleted == null)) {
                this.QueryActInterSrvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryActInterSrvOperationCompleted);
            }
            this.InvokeAsync("QueryActInterSrv", new object[0], this.QueryActInterSrvOperationCompleted, userState);
        }
        
        private void OnQueryActInterSrvOperationCompleted(object arg) {
            if ((this.QueryActInterSrvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryActInterSrvCompleted(this, new QueryActInterSrvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/QS")]
    public enum ServiceType {
        
        /// <remarks/>
        QueryService,
        
        /// <remarks/>
        MasterControl,
        
        /// <remarks/>
        FileSetMan,
        
        /// <remarks/>
        ShareBrowse,
        
        /// <remarks/>
        InterServer,
        
        /// <remarks/>
        FileService,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryUrlCompletedEventHandler(object sender, QueryUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QuerySrvIpCompletedEventHandler(object sender, QuerySrvIpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySrvIpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySrvIpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryActInterSrvCompletedEventHandler(object sender, QueryActInterSrvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryActInterSrvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryActInterSrvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591