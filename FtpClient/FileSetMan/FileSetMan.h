/* FileSetMan.h
   Generated by wsdl2h 1.2.14 from http://localhost/FSM/FileSetMan.asmx?WSDL and typemap.dat
   2010-01-24 13:27:16 GMT
   gSOAP XML Web services tools.
   Copyright (C) 2001-2009 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * http://localhost/FSM                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to disable)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/

// This service uses SOAP 1.2 namespaces:
//gsoap SOAP-ENV schema namespace:	http://www.w3.org/2003/05/soap-envelope
//gsoap SOAP-ENC schema namespace:	http://www.w3.org/2003/05/soap-encoding

/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://localhost/FSM"

*/

//gsoap ns1   schema namespace:	http://localhost/FSM
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__FileSet.
class ns1__FileSet;

//  Forward declaration of class ns1__ArrayOfFile.
class ns1__ArrayOfFile;

//  Forward declaration of class ns1__File.
class ns1__File;

//  Forward declaration of class _ns1__CreateFileSet.
class _ns1__CreateFileSet;

//  Forward declaration of class _ns1__CreateFileSetResponse.
class _ns1__CreateFileSetResponse;

//  Forward declaration of class _ns1__QureyFileSet.
class _ns1__QureyFileSet;

//  Forward declaration of class _ns1__QureyFileSetResponse.
class _ns1__QureyFileSetResponse;

//  Forward declaration of class _ns1__DeleteFileSet.
class _ns1__DeleteFileSet;

//  Forward declaration of class _ns1__DeleteFileSetResponse.
class _ns1__DeleteFileSetResponse;

//  Forward declaration of class _ns1__CommitFileSet.
class _ns1__CommitFileSet;

//  Forward declaration of class _ns1__CommitFileSetResponse.
class _ns1__CommitFileSetResponse;

//  Forward declaration of class _ns1__ProgressNotify.
class _ns1__ProgressNotify;

//  Forward declaration of class _ns1__ProgressNotifyResponse.
class _ns1__ProgressNotifyResponse;

//  Forward declaration of class _ns1__CommitFile.
class _ns1__CommitFile;

//  Forward declaration of class _ns1__CommitFileResponse.
class _ns1__CommitFileResponse;

//  Forward declaration of class _ns1__CommitError.
class _ns1__CommitError;

//  Forward declaration of class _ns1__CommitErrorResponse.
class _ns1__CommitErrorResponse;

/// "http://localhost/FSM":FileSet is a complexType.
class ns1__FileSet
{ public:
/// Element ID of type xs:long.
    LONG64                               ID                             1;	///< Required element.
/// Element Path of type xs:string.
    std::string*                         Path                           0;	///< Optional element.
/// Element Ready of type xs:boolean.
    bool                                 Ready                          1;	///< Required element.
/// Element File of type "http://localhost/FSM":ArrayOfFile.
    ns1__ArrayOfFile*                    File                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/FSM":ArrayOfFile is a complexType.
class ns1__ArrayOfFile
{ public:
/// Vector of ns1__File* with length 0..unbounded
    std::vector<ns1__File*             > File                           0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/FSM":File is a complexType.
class ns1__File
{ public:
/// Element ID of type xs:long.
    LONG64                               ID                             1;	///< Required element.
/// Element FileSetID of type xs:long.
    LONG64                               FileSetID                      1;	///< Required element.
/// Element FileName of type xs:string.
    std::string*                         FileName                       0;	///< Optional element.
/// Element Size of type xs:long.
    LONG64                               Size                           1;	///< Required element.
/// Element ShowIndex of type xs:int.
    int                                  ShowIndex                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":CreateFileSet of complexType.

/// "http://localhost/FSM":CreateFileSet is a complexType.
class _ns1__CreateFileSet
{ public:
/// Element fset of type "http://localhost/FSM":FileSet.
    ns1__FileSet*                        fset                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":CreateFileSetResponse of complexType.

/// "http://localhost/FSM":CreateFileSetResponse is a complexType.
class _ns1__CreateFileSetResponse
{ public:
/// Element CreateFileSetResult of type xs:long.
    LONG64                               CreateFileSetResult            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":QureyFileSet of complexType.

/// "http://localhost/FSM":QureyFileSet is a complexType.
class _ns1__QureyFileSet
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":QureyFileSetResponse of complexType.

/// "http://localhost/FSM":QureyFileSetResponse is a complexType.
class _ns1__QureyFileSetResponse
{ public:
/// Element QureyFileSetResult of type "http://localhost/FSM":FileSet.
    ns1__FileSet*                        QureyFileSetResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":DeleteFileSet of complexType.

/// "http://localhost/FSM":DeleteFileSet is a complexType.
class _ns1__DeleteFileSet
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":DeleteFileSetResponse of complexType.

/// "http://localhost/FSM":DeleteFileSetResponse is a complexType.
class _ns1__DeleteFileSetResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":CommitFileSet of complexType.

/// "http://localhost/FSM":CommitFileSet is a complexType.
class _ns1__CommitFileSet
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":CommitFileSetResponse of complexType.

/// "http://localhost/FSM":CommitFileSetResponse is a complexType.
class _ns1__CommitFileSetResponse
{ public:
/// Element CommitFileSetResult of type xs:int.
    int                                  CommitFileSetResult            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":ProgressNotify of complexType.

/// "http://localhost/FSM":ProgressNotify is a complexType.
class _ns1__ProgressNotify
{ public:
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element total of type xs:long.
    LONG64                               total                          1;	///< Required element.
/// Element downloaded of type xs:long.
    LONG64                               downloaded                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":ProgressNotifyResponse of complexType.

/// "http://localhost/FSM":ProgressNotifyResponse is a complexType.
class _ns1__ProgressNotifyResponse
{ public:
/// Element ProgressNotifyResult of type xs:int.
    int                                  ProgressNotifyResult           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":CommitFile of complexType.

/// "http://localhost/FSM":CommitFile is a complexType.
class _ns1__CommitFile
{ public:
/// Element fsid of type xs:long.
    LONG64                               fsid                           1;	///< Required element.
/// Element fid of type xs:long.
    LONG64                               fid                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":CommitFileResponse of complexType.

/// "http://localhost/FSM":CommitFileResponse is a complexType.
class _ns1__CommitFileResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":CommitError of complexType.

/// "http://localhost/FSM":CommitError is a complexType.
class _ns1__CommitError
{ public:
/// Element msg of type xs:string.
    std::string*                         msg                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://localhost/FSM":CommitErrorResponse of complexType.

/// "http://localhost/FSM":CommitErrorResponse is a complexType.
class _ns1__CommitErrorResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns2  service name:	FileSetManSoap 
//gsoap ns2  service type:	FileSetManSoap 
//gsoap ns2  service port:	http://localhost/FSM/FileSetMan.asmx 
//gsoap ns2  service namespace:	http://localhost/FSM/FileSetManSoap 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns3  service name:	FileSetManSoap12 
//gsoap ns3  service type:	FileSetManSoap 
//gsoap ns3  service port:	http://localhost/FSM/FileSetMan.asmx 
//gsoap ns3  service namespace:	http://localhost/FSM/FileSetManSoap12 
//gsoap ns3  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref FileSetManSoap
  - @ref FileSetManSoap12

*/

/**

@page FileSetManSoap Binding "FileSetManSoap"

@section FileSetManSoap_operations Operations of Binding  "FileSetManSoap"
  - @ref __ns2__CreateFileSet
  - @ref __ns2__QureyFileSet
  - @ref __ns2__DeleteFileSet
  - @ref __ns2__CommitFileSet
  - @ref __ns2__ProgressNotify
  - @ref __ns2__CommitFile
  - @ref __ns2__CommitError

@section FileSetManSoap_ports Endpoints of Binding  "FileSetManSoap"
  - http://localhost/FSM/FileSetMan.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page FileSetManSoap12 Binding "FileSetManSoap12"

@section FileSetManSoap12_operations Operations of Binding  "FileSetManSoap12"
  - @ref __ns3__CreateFileSet
  - @ref __ns3__QureyFileSet
  - @ref __ns3__DeleteFileSet
  - @ref __ns3__CommitFileSet
  - @ref __ns3__ProgressNotify
  - @ref __ns3__CommitFile
  - @ref __ns3__CommitError

@section FileSetManSoap12_ports Endpoints of Binding  "FileSetManSoap12"
  - http://localhost/FSM/FileSetMan.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * FileSetManSoap                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns2__CreateFileSet                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__CreateFileSet" of service binding "FileSetManSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/CreateFileSet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__CreateFileSet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CreateFileSet*                ns1__CreateFileSet,
    // response parameters:
    _ns1__CreateFileSetResponse*        ns1__CreateFileSetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__CreateFileSet(
    struct soap *soap,
    // request parameters:
    _ns1__CreateFileSet*                ns1__CreateFileSet,
    // response parameters:
    _ns1__CreateFileSetResponse*        ns1__CreateFileSetResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoapProxy.h):
  class FileSetManSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	CreateFileSet document
//gsoap ns2  service method-encoding:	CreateFileSet literal
//gsoap ns2  service method-action:	CreateFileSet http://localhost/FSM/CreateFileSet
int __ns2__CreateFileSet(
    _ns1__CreateFileSet*                ns1__CreateFileSet,	///< Request parameter
    _ns1__CreateFileSetResponse*        ns1__CreateFileSetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__QureyFileSet                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__QureyFileSet" of service binding "FileSetManSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/QureyFileSet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__QureyFileSet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__QureyFileSet*                 ns1__QureyFileSet,
    // response parameters:
    _ns1__QureyFileSetResponse*         ns1__QureyFileSetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__QureyFileSet(
    struct soap *soap,
    // request parameters:
    _ns1__QureyFileSet*                 ns1__QureyFileSet,
    // response parameters:
    _ns1__QureyFileSetResponse*         ns1__QureyFileSetResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoapProxy.h):
  class FileSetManSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	QureyFileSet document
//gsoap ns2  service method-encoding:	QureyFileSet literal
//gsoap ns2  service method-action:	QureyFileSet http://localhost/FSM/QureyFileSet
int __ns2__QureyFileSet(
    _ns1__QureyFileSet*                 ns1__QureyFileSet,	///< Request parameter
    _ns1__QureyFileSetResponse*         ns1__QureyFileSetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__DeleteFileSet                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__DeleteFileSet" of service binding "FileSetManSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/DeleteFileSet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__DeleteFileSet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeleteFileSet*                ns1__DeleteFileSet,
    // response parameters:
    _ns1__DeleteFileSetResponse*        ns1__DeleteFileSetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__DeleteFileSet(
    struct soap *soap,
    // request parameters:
    _ns1__DeleteFileSet*                ns1__DeleteFileSet,
    // response parameters:
    _ns1__DeleteFileSetResponse*        ns1__DeleteFileSetResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoapProxy.h):
  class FileSetManSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	DeleteFileSet document
//gsoap ns2  service method-encoding:	DeleteFileSet literal
//gsoap ns2  service method-action:	DeleteFileSet http://localhost/FSM/DeleteFileSet
int __ns2__DeleteFileSet(
    _ns1__DeleteFileSet*                ns1__DeleteFileSet,	///< Request parameter
    _ns1__DeleteFileSetResponse*        ns1__DeleteFileSetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__CommitFileSet                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__CommitFileSet" of service binding "FileSetManSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/CommitFileSet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__CommitFileSet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CommitFileSet*                ns1__CommitFileSet,
    // response parameters:
    _ns1__CommitFileSetResponse*        ns1__CommitFileSetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__CommitFileSet(
    struct soap *soap,
    // request parameters:
    _ns1__CommitFileSet*                ns1__CommitFileSet,
    // response parameters:
    _ns1__CommitFileSetResponse*        ns1__CommitFileSetResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoapProxy.h):
  class FileSetManSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	CommitFileSet document
//gsoap ns2  service method-encoding:	CommitFileSet literal
//gsoap ns2  service method-action:	CommitFileSet http://localhost/FSM/CommitFileSet
int __ns2__CommitFileSet(
    _ns1__CommitFileSet*                ns1__CommitFileSet,	///< Request parameter
    _ns1__CommitFileSetResponse*        ns1__CommitFileSetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__ProgressNotify                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__ProgressNotify" of service binding "FileSetManSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/ProgressNotify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__ProgressNotify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__ProgressNotify*               ns1__ProgressNotify,
    // response parameters:
    _ns1__ProgressNotifyResponse*       ns1__ProgressNotifyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__ProgressNotify(
    struct soap *soap,
    // request parameters:
    _ns1__ProgressNotify*               ns1__ProgressNotify,
    // response parameters:
    _ns1__ProgressNotifyResponse*       ns1__ProgressNotifyResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoapProxy.h):
  class FileSetManSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	ProgressNotify document
//gsoap ns2  service method-encoding:	ProgressNotify literal
//gsoap ns2  service method-action:	ProgressNotify http://localhost/FSM/ProgressNotify
int __ns2__ProgressNotify(
    _ns1__ProgressNotify*               ns1__ProgressNotify,	///< Request parameter
    _ns1__ProgressNotifyResponse*       ns1__ProgressNotifyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__CommitFile                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__CommitFile" of service binding "FileSetManSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/CommitFile"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__CommitFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CommitFile*                   ns1__CommitFile,
    // response parameters:
    _ns1__CommitFileResponse*           ns1__CommitFileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__CommitFile(
    struct soap *soap,
    // request parameters:
    _ns1__CommitFile*                   ns1__CommitFile,
    // response parameters:
    _ns1__CommitFileResponse*           ns1__CommitFileResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoapProxy.h):
  class FileSetManSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	CommitFile document
//gsoap ns2  service method-encoding:	CommitFile literal
//gsoap ns2  service method-action:	CommitFile http://localhost/FSM/CommitFile
int __ns2__CommitFile(
    _ns1__CommitFile*                   ns1__CommitFile,	///< Request parameter
    _ns1__CommitFileResponse*           ns1__CommitFileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__CommitError                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__CommitError" of service binding "FileSetManSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/CommitError"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__CommitError(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CommitError*                  ns1__CommitError,
    // response parameters:
    _ns1__CommitErrorResponse*          ns1__CommitErrorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__CommitError(
    struct soap *soap,
    // request parameters:
    _ns1__CommitError*                  ns1__CommitError,
    // response parameters:
    _ns1__CommitErrorResponse*          ns1__CommitErrorResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoapProxy.h):
  class FileSetManSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	CommitError document
//gsoap ns2  service method-encoding:	CommitError literal
//gsoap ns2  service method-action:	CommitError http://localhost/FSM/CommitError
int __ns2__CommitError(
    _ns1__CommitError*                  ns1__CommitError,	///< Request parameter
    _ns1__CommitErrorResponse*          ns1__CommitErrorResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * FileSetManSoap12                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns3__CreateFileSet                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__CreateFileSet" of service binding "FileSetManSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/CreateFileSet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__CreateFileSet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CreateFileSet*                ns1__CreateFileSet,
    // response parameters:
    _ns1__CreateFileSetResponse*        ns1__CreateFileSetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__CreateFileSet(
    struct soap *soap,
    // request parameters:
    _ns1__CreateFileSet*                ns1__CreateFileSet,
    // response parameters:
    _ns1__CreateFileSetResponse*        ns1__CreateFileSetResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoap12Proxy.h):
  class FileSetManSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	CreateFileSet document
//gsoap ns3  service method-encoding:	CreateFileSet literal
//gsoap ns3  service method-action:	CreateFileSet http://localhost/FSM/CreateFileSet
int __ns3__CreateFileSet(
    _ns1__CreateFileSet*                ns1__CreateFileSet,	///< Request parameter
    _ns1__CreateFileSetResponse*        ns1__CreateFileSetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__QureyFileSet                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__QureyFileSet" of service binding "FileSetManSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/QureyFileSet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__QureyFileSet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__QureyFileSet*                 ns1__QureyFileSet,
    // response parameters:
    _ns1__QureyFileSetResponse*         ns1__QureyFileSetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__QureyFileSet(
    struct soap *soap,
    // request parameters:
    _ns1__QureyFileSet*                 ns1__QureyFileSet,
    // response parameters:
    _ns1__QureyFileSetResponse*         ns1__QureyFileSetResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoap12Proxy.h):
  class FileSetManSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	QureyFileSet document
//gsoap ns3  service method-encoding:	QureyFileSet literal
//gsoap ns3  service method-action:	QureyFileSet http://localhost/FSM/QureyFileSet
int __ns3__QureyFileSet(
    _ns1__QureyFileSet*                 ns1__QureyFileSet,	///< Request parameter
    _ns1__QureyFileSetResponse*         ns1__QureyFileSetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__DeleteFileSet                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__DeleteFileSet" of service binding "FileSetManSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/DeleteFileSet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__DeleteFileSet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeleteFileSet*                ns1__DeleteFileSet,
    // response parameters:
    _ns1__DeleteFileSetResponse*        ns1__DeleteFileSetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__DeleteFileSet(
    struct soap *soap,
    // request parameters:
    _ns1__DeleteFileSet*                ns1__DeleteFileSet,
    // response parameters:
    _ns1__DeleteFileSetResponse*        ns1__DeleteFileSetResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoap12Proxy.h):
  class FileSetManSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	DeleteFileSet document
//gsoap ns3  service method-encoding:	DeleteFileSet literal
//gsoap ns3  service method-action:	DeleteFileSet http://localhost/FSM/DeleteFileSet
int __ns3__DeleteFileSet(
    _ns1__DeleteFileSet*                ns1__DeleteFileSet,	///< Request parameter
    _ns1__DeleteFileSetResponse*        ns1__DeleteFileSetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__CommitFileSet                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__CommitFileSet" of service binding "FileSetManSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/CommitFileSet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__CommitFileSet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CommitFileSet*                ns1__CommitFileSet,
    // response parameters:
    _ns1__CommitFileSetResponse*        ns1__CommitFileSetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__CommitFileSet(
    struct soap *soap,
    // request parameters:
    _ns1__CommitFileSet*                ns1__CommitFileSet,
    // response parameters:
    _ns1__CommitFileSetResponse*        ns1__CommitFileSetResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoap12Proxy.h):
  class FileSetManSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	CommitFileSet document
//gsoap ns3  service method-encoding:	CommitFileSet literal
//gsoap ns3  service method-action:	CommitFileSet http://localhost/FSM/CommitFileSet
int __ns3__CommitFileSet(
    _ns1__CommitFileSet*                ns1__CommitFileSet,	///< Request parameter
    _ns1__CommitFileSetResponse*        ns1__CommitFileSetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__ProgressNotify                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__ProgressNotify" of service binding "FileSetManSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/ProgressNotify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__ProgressNotify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__ProgressNotify*               ns1__ProgressNotify,
    // response parameters:
    _ns1__ProgressNotifyResponse*       ns1__ProgressNotifyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__ProgressNotify(
    struct soap *soap,
    // request parameters:
    _ns1__ProgressNotify*               ns1__ProgressNotify,
    // response parameters:
    _ns1__ProgressNotifyResponse*       ns1__ProgressNotifyResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoap12Proxy.h):
  class FileSetManSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	ProgressNotify document
//gsoap ns3  service method-encoding:	ProgressNotify literal
//gsoap ns3  service method-action:	ProgressNotify http://localhost/FSM/ProgressNotify
int __ns3__ProgressNotify(
    _ns1__ProgressNotify*               ns1__ProgressNotify,	///< Request parameter
    _ns1__ProgressNotifyResponse*       ns1__ProgressNotifyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__CommitFile                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__CommitFile" of service binding "FileSetManSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/CommitFile"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__CommitFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CommitFile*                   ns1__CommitFile,
    // response parameters:
    _ns1__CommitFileResponse*           ns1__CommitFileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__CommitFile(
    struct soap *soap,
    // request parameters:
    _ns1__CommitFile*                   ns1__CommitFile,
    // response parameters:
    _ns1__CommitFileResponse*           ns1__CommitFileResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoap12Proxy.h):
  class FileSetManSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	CommitFile document
//gsoap ns3  service method-encoding:	CommitFile literal
//gsoap ns3  service method-action:	CommitFile http://localhost/FSM/CommitFile
int __ns3__CommitFile(
    _ns1__CommitFile*                   ns1__CommitFile,	///< Request parameter
    _ns1__CommitFileResponse*           ns1__CommitFileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__CommitError                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__CommitError" of service binding "FileSetManSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://localhost/FSM/CommitError"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__CommitError(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CommitError*                  ns1__CommitError,
    // response parameters:
    _ns1__CommitErrorResponse*          ns1__CommitErrorResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__CommitError(
    struct soap *soap,
    // request parameters:
    _ns1__CommitError*                  ns1__CommitError,
    // response parameters:
    _ns1__CommitErrorResponse*          ns1__CommitErrorResponse
  );
@endcode

C++ proxy class (defined in soapFileSetManSoap12Proxy.h):
  class FileSetManSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	CommitError document
//gsoap ns3  service method-encoding:	CommitError literal
//gsoap ns3  service method-action:	CommitError http://localhost/FSM/CommitError
int __ns3__CommitError(
    _ns1__CommitError*                  ns1__CommitError,	///< Request parameter
    _ns1__CommitErrorResponse*          ns1__CommitErrorResponse	///< Response parameter
);

/* End of FileSetMan.h */
