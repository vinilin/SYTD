/* FtpH.h
   Generated by gSOAP 2.7.14 from Control.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef FtpH_H
#define FtpH_H
#include "FtpStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

#ifndef SOAP_TYPE_xsd__positiveInteger
#define SOAP_TYPE_xsd__positiveInteger (10)
#endif

#define soap_default_xsd__positiveInteger(soap, a) soap_default_LONG64(soap, a)


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__positiveInteger(struct soap*, const LONG64 *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__positiveInteger(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__positiveInteger(struct soap*, LONG64 *, const char*, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__positiveInteger(struct soap*, const char*, LONG64 *, const char*);

#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

#ifndef SOAP_TYPE_ftp__Status
#define SOAP_TYPE_ftp__Status (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__Status(struct soap*, enum ftp__Status *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__Status(struct soap*, const enum ftp__Status *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__Status(struct soap*, const char*, int, const enum ftp__Status *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ftp__Status2s(struct soap*, enum ftp__Status);
SOAP_FMAC3 enum ftp__Status * SOAP_FMAC4 soap_get_ftp__Status(struct soap*, enum ftp__Status *, const char*, const char*);
SOAP_FMAC3 enum ftp__Status * SOAP_FMAC4 soap_in_ftp__Status(struct soap*, const char*, enum ftp__Status *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ftp__Status(struct soap*, const char*, enum ftp__Status *);

#ifndef SOAP_TYPE_ftp__State
#define SOAP_TYPE_ftp__State (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__State(struct soap*, const char*, int, const ftp__State *, const char*);
SOAP_FMAC3 ftp__State * SOAP_FMAC4 soap_get_ftp__State(struct soap*, ftp__State *, const char*, const char*);
SOAP_FMAC3 ftp__State * SOAP_FMAC4 soap_in_ftp__State(struct soap*, const char*, ftp__State *, const char*);

#define soap_new_ftp__State(soap, n) soap_instantiate_ftp__State(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__State(soap, p) soap_delete(soap, p)

SOAP_FMAC3 ftp__State * SOAP_FMAC4 soap_instantiate_ftp__State(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__State(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__ArrayOfFile
#define SOAP_TYPE_ftp__ArrayOfFile (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__ArrayOfFile(struct soap*, const char*, int, const ftp__ArrayOfFile *, const char*);
SOAP_FMAC3 ftp__ArrayOfFile * SOAP_FMAC4 soap_get_ftp__ArrayOfFile(struct soap*, ftp__ArrayOfFile *, const char*, const char*);
SOAP_FMAC3 ftp__ArrayOfFile * SOAP_FMAC4 soap_in_ftp__ArrayOfFile(struct soap*, const char*, ftp__ArrayOfFile *, const char*);

#define soap_new_ftp__ArrayOfFile(soap, n) soap_instantiate_ftp__ArrayOfFile(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__ArrayOfFile(soap, p) soap_delete(soap, p)

SOAP_FMAC3 ftp__ArrayOfFile * SOAP_FMAC4 soap_instantiate_ftp__ArrayOfFile(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__ArrayOfFile(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__Position
#define SOAP_TYPE_ftp__Position (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__Position(struct soap*, const char*, int, const ftp__Position *, const char*);
SOAP_FMAC3 ftp__Position * SOAP_FMAC4 soap_get_ftp__Position(struct soap*, ftp__Position *, const char*, const char*);
SOAP_FMAC3 ftp__Position * SOAP_FMAC4 soap_in_ftp__Position(struct soap*, const char*, ftp__Position *, const char*);

#define soap_new_ftp__Position(soap, n) soap_instantiate_ftp__Position(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__Position(soap, p) soap_delete(soap, p)

SOAP_FMAC3 ftp__Position * SOAP_FMAC4 soap_instantiate_ftp__Position(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__Position(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__File
#define SOAP_TYPE_ftp__File (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__File(struct soap*, const char*, int, const ftp__File *, const char*);
SOAP_FMAC3 ftp__File * SOAP_FMAC4 soap_get_ftp__File(struct soap*, ftp__File *, const char*, const char*);
SOAP_FMAC3 ftp__File * SOAP_FMAC4 soap_in_ftp__File(struct soap*, const char*, ftp__File *, const char*);

#define soap_new_ftp__File(soap, n) soap_instantiate_ftp__File(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__File(soap, p) soap_delete(soap, p)

SOAP_FMAC3 ftp__File * SOAP_FMAC4 soap_instantiate_ftp__File(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__File(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (12)
#endif

#define soap_default_xsd__string(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__string(soap, a) soap_serialize_std__string(soap, a)


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, const std::string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__string(struct soap*, std::string *, const char*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, std::string*, const char*);

#define soap_new_xsd__string(soap, n) soap_instantiate_xsd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__string(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__string soap_instantiate_std__string


#define soap_copy_xsd__string soap_copy_std__string

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ftp__GetState
#define SOAP_TYPE_ftp__GetState (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__GetState(struct soap*, struct ftp__GetState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__GetState(struct soap*, const struct ftp__GetState *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__GetState(struct soap*, const struct ftp__GetState *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__GetState(struct soap*, const char*, int, const struct ftp__GetState *, const char*);
SOAP_FMAC3 struct ftp__GetState * SOAP_FMAC4 soap_get_ftp__GetState(struct soap*, struct ftp__GetState *, const char*, const char*);
SOAP_FMAC3 struct ftp__GetState * SOAP_FMAC4 soap_in_ftp__GetState(struct soap*, const char*, struct ftp__GetState *, const char*);

#define soap_new_ftp__GetState(soap, n) soap_instantiate_ftp__GetState(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__GetState(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__GetState * SOAP_FMAC4 soap_instantiate_ftp__GetState(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__GetState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__DeleteAll
#define SOAP_TYPE_ftp__DeleteAll (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__DeleteAll(struct soap*, struct ftp__DeleteAll *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__DeleteAll(struct soap*, const struct ftp__DeleteAll *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__DeleteAll(struct soap*, const struct ftp__DeleteAll *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__DeleteAll(struct soap*, const char*, int, const struct ftp__DeleteAll *, const char*);
SOAP_FMAC3 struct ftp__DeleteAll * SOAP_FMAC4 soap_get_ftp__DeleteAll(struct soap*, struct ftp__DeleteAll *, const char*, const char*);
SOAP_FMAC3 struct ftp__DeleteAll * SOAP_FMAC4 soap_in_ftp__DeleteAll(struct soap*, const char*, struct ftp__DeleteAll *, const char*);

#define soap_new_ftp__DeleteAll(soap, n) soap_instantiate_ftp__DeleteAll(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__DeleteAll(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__DeleteAll * SOAP_FMAC4 soap_instantiate_ftp__DeleteAll(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__DeleteAll(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__DeleteAllResponse
#define SOAP_TYPE_ftp__DeleteAllResponse (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__DeleteAllResponse(struct soap*, struct ftp__DeleteAllResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__DeleteAllResponse(struct soap*, const struct ftp__DeleteAllResponse *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__DeleteAllResponse(struct soap*, const struct ftp__DeleteAllResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__DeleteAllResponse(struct soap*, const char*, int, const struct ftp__DeleteAllResponse *, const char*);
SOAP_FMAC3 struct ftp__DeleteAllResponse * SOAP_FMAC4 soap_get_ftp__DeleteAllResponse(struct soap*, struct ftp__DeleteAllResponse *, const char*, const char*);
SOAP_FMAC3 struct ftp__DeleteAllResponse * SOAP_FMAC4 soap_in_ftp__DeleteAllResponse(struct soap*, const char*, struct ftp__DeleteAllResponse *, const char*);

#define soap_new_ftp__DeleteAllResponse(soap, n) soap_instantiate_ftp__DeleteAllResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__DeleteAllResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__DeleteAllResponse * SOAP_FMAC4 soap_instantiate_ftp__DeleteAllResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__DeleteAllResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__Delete
#define SOAP_TYPE_ftp__Delete (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__Delete(struct soap*, struct ftp__Delete *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__Delete(struct soap*, const struct ftp__Delete *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__Delete(struct soap*, const struct ftp__Delete *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__Delete(struct soap*, const char*, int, const struct ftp__Delete *, const char*);
SOAP_FMAC3 struct ftp__Delete * SOAP_FMAC4 soap_get_ftp__Delete(struct soap*, struct ftp__Delete *, const char*, const char*);
SOAP_FMAC3 struct ftp__Delete * SOAP_FMAC4 soap_in_ftp__Delete(struct soap*, const char*, struct ftp__Delete *, const char*);

#define soap_new_ftp__Delete(soap, n) soap_instantiate_ftp__Delete(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__Delete(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__Delete * SOAP_FMAC4 soap_instantiate_ftp__Delete(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__Delete(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__DeleteResponse
#define SOAP_TYPE_ftp__DeleteResponse (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__DeleteResponse(struct soap*, struct ftp__DeleteResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__DeleteResponse(struct soap*, const struct ftp__DeleteResponse *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__DeleteResponse(struct soap*, const struct ftp__DeleteResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__DeleteResponse(struct soap*, const char*, int, const struct ftp__DeleteResponse *, const char*);
SOAP_FMAC3 struct ftp__DeleteResponse * SOAP_FMAC4 soap_get_ftp__DeleteResponse(struct soap*, struct ftp__DeleteResponse *, const char*, const char*);
SOAP_FMAC3 struct ftp__DeleteResponse * SOAP_FMAC4 soap_in_ftp__DeleteResponse(struct soap*, const char*, struct ftp__DeleteResponse *, const char*);

#define soap_new_ftp__DeleteResponse(soap, n) soap_instantiate_ftp__DeleteResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__DeleteResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__DeleteResponse * SOAP_FMAC4 soap_instantiate_ftp__DeleteResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__DeleteResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__Resume
#define SOAP_TYPE_ftp__Resume (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__Resume(struct soap*, struct ftp__Resume *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__Resume(struct soap*, const struct ftp__Resume *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__Resume(struct soap*, const struct ftp__Resume *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__Resume(struct soap*, const char*, int, const struct ftp__Resume *, const char*);
SOAP_FMAC3 struct ftp__Resume * SOAP_FMAC4 soap_get_ftp__Resume(struct soap*, struct ftp__Resume *, const char*, const char*);
SOAP_FMAC3 struct ftp__Resume * SOAP_FMAC4 soap_in_ftp__Resume(struct soap*, const char*, struct ftp__Resume *, const char*);

#define soap_new_ftp__Resume(soap, n) soap_instantiate_ftp__Resume(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__Resume(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__Resume * SOAP_FMAC4 soap_instantiate_ftp__Resume(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__Resume(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__ResumeResponse
#define SOAP_TYPE_ftp__ResumeResponse (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__ResumeResponse(struct soap*, struct ftp__ResumeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__ResumeResponse(struct soap*, const struct ftp__ResumeResponse *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__ResumeResponse(struct soap*, const struct ftp__ResumeResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__ResumeResponse(struct soap*, const char*, int, const struct ftp__ResumeResponse *, const char*);
SOAP_FMAC3 struct ftp__ResumeResponse * SOAP_FMAC4 soap_get_ftp__ResumeResponse(struct soap*, struct ftp__ResumeResponse *, const char*, const char*);
SOAP_FMAC3 struct ftp__ResumeResponse * SOAP_FMAC4 soap_in_ftp__ResumeResponse(struct soap*, const char*, struct ftp__ResumeResponse *, const char*);

#define soap_new_ftp__ResumeResponse(soap, n) soap_instantiate_ftp__ResumeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__ResumeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__ResumeResponse * SOAP_FMAC4 soap_instantiate_ftp__ResumeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__ResumeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__Pause
#define SOAP_TYPE_ftp__Pause (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__Pause(struct soap*, struct ftp__Pause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__Pause(struct soap*, const struct ftp__Pause *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__Pause(struct soap*, const struct ftp__Pause *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__Pause(struct soap*, const char*, int, const struct ftp__Pause *, const char*);
SOAP_FMAC3 struct ftp__Pause * SOAP_FMAC4 soap_get_ftp__Pause(struct soap*, struct ftp__Pause *, const char*, const char*);
SOAP_FMAC3 struct ftp__Pause * SOAP_FMAC4 soap_in_ftp__Pause(struct soap*, const char*, struct ftp__Pause *, const char*);

#define soap_new_ftp__Pause(soap, n) soap_instantiate_ftp__Pause(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__Pause(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__Pause * SOAP_FMAC4 soap_instantiate_ftp__Pause(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__Pause(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__PauseResponse
#define SOAP_TYPE_ftp__PauseResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__PauseResponse(struct soap*, struct ftp__PauseResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__PauseResponse(struct soap*, const struct ftp__PauseResponse *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__PauseResponse(struct soap*, const struct ftp__PauseResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__PauseResponse(struct soap*, const char*, int, const struct ftp__PauseResponse *, const char*);
SOAP_FMAC3 struct ftp__PauseResponse * SOAP_FMAC4 soap_get_ftp__PauseResponse(struct soap*, struct ftp__PauseResponse *, const char*, const char*);
SOAP_FMAC3 struct ftp__PauseResponse * SOAP_FMAC4 soap_in_ftp__PauseResponse(struct soap*, const char*, struct ftp__PauseResponse *, const char*);

#define soap_new_ftp__PauseResponse(soap, n) soap_instantiate_ftp__PauseResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__PauseResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__PauseResponse * SOAP_FMAC4 soap_instantiate_ftp__PauseResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__PauseResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__Start
#define SOAP_TYPE_ftp__Start (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__Start(struct soap*, struct ftp__Start *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__Start(struct soap*, const struct ftp__Start *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__Start(struct soap*, const struct ftp__Start *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__Start(struct soap*, const char*, int, const struct ftp__Start *, const char*);
SOAP_FMAC3 struct ftp__Start * SOAP_FMAC4 soap_get_ftp__Start(struct soap*, struct ftp__Start *, const char*, const char*);
SOAP_FMAC3 struct ftp__Start * SOAP_FMAC4 soap_in_ftp__Start(struct soap*, const char*, struct ftp__Start *, const char*);

#define soap_new_ftp__Start(soap, n) soap_instantiate_ftp__Start(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__Start(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__Start * SOAP_FMAC4 soap_instantiate_ftp__Start(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__Start(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__StartResponse
#define SOAP_TYPE_ftp__StartResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__StartResponse(struct soap*, struct ftp__StartResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__StartResponse(struct soap*, const struct ftp__StartResponse *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__StartResponse(struct soap*, const struct ftp__StartResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__StartResponse(struct soap*, const char*, int, const struct ftp__StartResponse *, const char*);
SOAP_FMAC3 struct ftp__StartResponse * SOAP_FMAC4 soap_get_ftp__StartResponse(struct soap*, struct ftp__StartResponse *, const char*, const char*);
SOAP_FMAC3 struct ftp__StartResponse * SOAP_FMAC4 soap_in_ftp__StartResponse(struct soap*, const char*, struct ftp__StartResponse *, const char*);

#define soap_new_ftp__StartResponse(soap, n) soap_instantiate_ftp__StartResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__StartResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__StartResponse * SOAP_FMAC4 soap_instantiate_ftp__StartResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__StartResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__Stop
#define SOAP_TYPE_ftp__Stop (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__Stop(struct soap*, struct ftp__Stop *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__Stop(struct soap*, const struct ftp__Stop *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__Stop(struct soap*, const struct ftp__Stop *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__Stop(struct soap*, const char*, int, const struct ftp__Stop *, const char*);
SOAP_FMAC3 struct ftp__Stop * SOAP_FMAC4 soap_get_ftp__Stop(struct soap*, struct ftp__Stop *, const char*, const char*);
SOAP_FMAC3 struct ftp__Stop * SOAP_FMAC4 soap_in_ftp__Stop(struct soap*, const char*, struct ftp__Stop *, const char*);

#define soap_new_ftp__Stop(soap, n) soap_instantiate_ftp__Stop(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__Stop(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__Stop * SOAP_FMAC4 soap_instantiate_ftp__Stop(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__Stop(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__StopResponse
#define SOAP_TYPE_ftp__StopResponse (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__StopResponse(struct soap*, struct ftp__StopResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__StopResponse(struct soap*, const struct ftp__StopResponse *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__StopResponse(struct soap*, const struct ftp__StopResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__StopResponse(struct soap*, const char*, int, const struct ftp__StopResponse *, const char*);
SOAP_FMAC3 struct ftp__StopResponse * SOAP_FMAC4 soap_get_ftp__StopResponse(struct soap*, struct ftp__StopResponse *, const char*, const char*);
SOAP_FMAC3 struct ftp__StopResponse * SOAP_FMAC4 soap_in_ftp__StopResponse(struct soap*, const char*, struct ftp__StopResponse *, const char*);

#define soap_new_ftp__StopResponse(soap, n) soap_instantiate_ftp__StopResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__StopResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__StopResponse * SOAP_FMAC4 soap_instantiate_ftp__StopResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__StopResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__Transform
#define SOAP_TYPE_ftp__Transform (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__Transform(struct soap*, struct ftp__Transform *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__Transform(struct soap*, const struct ftp__Transform *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__Transform(struct soap*, const struct ftp__Transform *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__Transform(struct soap*, const char*, int, const struct ftp__Transform *, const char*);
SOAP_FMAC3 struct ftp__Transform * SOAP_FMAC4 soap_get_ftp__Transform(struct soap*, struct ftp__Transform *, const char*, const char*);
SOAP_FMAC3 struct ftp__Transform * SOAP_FMAC4 soap_in_ftp__Transform(struct soap*, const char*, struct ftp__Transform *, const char*);

#define soap_new_ftp__Transform(soap, n) soap_instantiate_ftp__Transform(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__Transform(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__Transform * SOAP_FMAC4 soap_instantiate_ftp__Transform(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__Transform(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ftp__TransformResponse
#define SOAP_TYPE_ftp__TransformResponse (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ftp__TransformResponse(struct soap*, struct ftp__TransformResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ftp__TransformResponse(struct soap*, const struct ftp__TransformResponse *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ftp__TransformResponse(struct soap*, const struct ftp__TransformResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ftp__TransformResponse(struct soap*, const char*, int, const struct ftp__TransformResponse *, const char*);
SOAP_FMAC3 struct ftp__TransformResponse * SOAP_FMAC4 soap_get_ftp__TransformResponse(struct soap*, struct ftp__TransformResponse *, const char*, const char*);
SOAP_FMAC3 struct ftp__TransformResponse * SOAP_FMAC4 soap_in_ftp__TransformResponse(struct soap*, const char*, struct ftp__TransformResponse *, const char*);

#define soap_new_ftp__TransformResponse(soap, n) soap_instantiate_ftp__TransformResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ftp__TransformResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC3 struct ftp__TransformResponse * SOAP_FMAC4 soap_instantiate_ftp__TransformResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ftp__TransformResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#endif

#ifndef SOAP_TYPE_PointerToftp__State
#define SOAP_TYPE_PointerToftp__State (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToftp__State(struct soap*, ftp__State *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToftp__State(struct soap*, ftp__State *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToftp__State(struct soap*, const char *, int, ftp__State *const*, const char *);
SOAP_FMAC3 ftp__State ** SOAP_FMAC4 soap_get_PointerToftp__State(struct soap*, ftp__State **, const char*, const char*);
SOAP_FMAC3 ftp__State ** SOAP_FMAC4 soap_in_PointerToftp__State(struct soap*, const char*, ftp__State **, const char*);

#ifndef SOAP_TYPE_PointerToftp__Position
#define SOAP_TYPE_PointerToftp__Position (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToftp__Position(struct soap*, ftp__Position *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToftp__Position(struct soap*, ftp__Position *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToftp__Position(struct soap*, const char *, int, ftp__Position *const*, const char *);
SOAP_FMAC3 ftp__Position ** SOAP_FMAC4 soap_get_PointerToftp__Position(struct soap*, ftp__Position **, const char*, const char*);
SOAP_FMAC3 ftp__Position ** SOAP_FMAC4 soap_in_PointerToftp__Position(struct soap*, const char*, ftp__Position **, const char*);

#ifndef SOAP_TYPE_PointerToftp__ArrayOfFile
#define SOAP_TYPE_PointerToftp__ArrayOfFile (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToftp__ArrayOfFile(struct soap*, ftp__ArrayOfFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToftp__ArrayOfFile(struct soap*, ftp__ArrayOfFile *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToftp__ArrayOfFile(struct soap*, const char *, int, ftp__ArrayOfFile *const*, const char *);
SOAP_FMAC3 ftp__ArrayOfFile ** SOAP_FMAC4 soap_get_PointerToftp__ArrayOfFile(struct soap*, ftp__ArrayOfFile **, const char*, const char*);
SOAP_FMAC3 ftp__ArrayOfFile ** SOAP_FMAC4 soap_in_PointerToftp__ArrayOfFile(struct soap*, const char*, ftp__ArrayOfFile **, const char*);

#ifndef SOAP_TYPE_PointerToftp__File
#define SOAP_TYPE_PointerToftp__File (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToftp__File(struct soap*, ftp__File *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToftp__File(struct soap*, ftp__File *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToftp__File(struct soap*, const char *, int, ftp__File *const*, const char *);
SOAP_FMAC3 ftp__File ** SOAP_FMAC4 soap_get_PointerToftp__File(struct soap*, ftp__File **, const char*, const char*);
SOAP_FMAC3 ftp__File ** SOAP_FMAC4 soap_in_PointerToftp__File(struct soap*, const char*, ftp__File **, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerToftp__File
#define SOAP_TYPE_std__vectorTemplateOfPointerToftp__File (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToftp__File(struct soap*, std::vector<ftp__File * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToftp__File(struct soap*, const std::vector<ftp__File * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToftp__File(struct soap*, const char*, int, const std::vector<ftp__File * >*, const char*);
SOAP_FMAC3 std::vector<ftp__File * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToftp__File(struct soap*, const char*, std::vector<ftp__File * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerToftp__File(soap, n) soap_instantiate_std__vectorTemplateOfPointerToftp__File(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerToftp__File(soap, p) soap_delete(soap, p)

SOAP_FMAC3 std::vector<ftp__File * > * SOAP_FMAC4 soap_instantiate_std__vectorTemplateOfPointerToftp__File(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerToftp__File(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of FtpH.h */
