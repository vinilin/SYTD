//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=2.0.50727.1432。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="Service", Namespace="http://localhost/ftp.xsd/Service.wsdl")]
public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback TransformOperationCompleted;
    
    private System.Threading.SendOrPostCallback StopOperationCompleted;
    
    private System.Threading.SendOrPostCallback StartOperationCompleted;
    
    private System.Threading.SendOrPostCallback PauseOperationCompleted;
    
    private System.Threading.SendOrPostCallback ResumeOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetStateOperationCompleted;
    
    /// <remarks/>
    public Service() {
        this.Url = "http://localhost:80";
    }
    
    /// <remarks/>
    public event TransformCompletedEventHandler TransformCompleted;
    
    /// <remarks/>
    public event StopCompletedEventHandler StopCompleted;
    
    /// <remarks/>
    public event StartCompletedEventHandler StartCompleted;
    
    /// <remarks/>
    public event PauseCompletedEventHandler PauseCompleted;
    
    /// <remarks/>
    public event ResumeCompletedEventHandler ResumeCompleted;
    
    /// <remarks/>
    public event DeleteCompletedEventHandler DeleteCompleted;
    
    /// <remarks/>
    public event GetStateCompletedEventHandler GetStateCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://tempuri.org/ftp.xsd", ResponseNamespace="http://tempuri.org/ftp.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("response", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int Transform([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] ArrayOfFile flist, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] Position position) {
        object[] results = this.Invoke("Transform", new object[] {
                    flist,
                    position});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTransform(ArrayOfFile flist, Position position, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Transform", new object[] {
                    flist,
                    position}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndTransform(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void TransformAsync(ArrayOfFile flist, Position position) {
        this.TransformAsync(flist, position, null);
    }
    
    /// <remarks/>
    public void TransformAsync(ArrayOfFile flist, Position position, object userState) {
        if ((this.TransformOperationCompleted == null)) {
            this.TransformOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransformOperationCompleted);
        }
        this.InvokeAsync("Transform", new object[] {
                    flist,
                    position}, this.TransformOperationCompleted, userState);
    }
    
    private void OnTransformOperationCompleted(object arg) {
        if ((this.TransformCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransformCompleted(this, new TransformCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://tempuri.org/ftp.xsd", ResponseNamespace="http://tempuri.org/ftp.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("response", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int Stop() {
        object[] results = this.Invoke("Stop", new object[0]);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginStop(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Stop", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public int EndStop(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void StopAsync() {
        this.StopAsync(null);
    }
    
    /// <remarks/>
    public void StopAsync(object userState) {
        if ((this.StopOperationCompleted == null)) {
            this.StopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopOperationCompleted);
        }
        this.InvokeAsync("Stop", new object[0], this.StopOperationCompleted, userState);
    }
    
    private void OnStopOperationCompleted(object arg) {
        if ((this.StopCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.StopCompleted(this, new StopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://tempuri.org/ftp.xsd", ResponseNamespace="http://tempuri.org/ftp.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("response", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int Start() {
        object[] results = this.Invoke("Start", new object[0]);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginStart(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Start", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public int EndStart(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void StartAsync() {
        this.StartAsync(null);
    }
    
    /// <remarks/>
    public void StartAsync(object userState) {
        if ((this.StartOperationCompleted == null)) {
            this.StartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartOperationCompleted);
        }
        this.InvokeAsync("Start", new object[0], this.StartOperationCompleted, userState);
    }
    
    private void OnStartOperationCompleted(object arg) {
        if ((this.StartCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.StartCompleted(this, new StartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://tempuri.org/ftp.xsd", ResponseNamespace="http://tempuri.org/ftp.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("response", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int Pause() {
        object[] results = this.Invoke("Pause", new object[0]);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginPause(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Pause", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public int EndPause(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void PauseAsync() {
        this.PauseAsync(null);
    }
    
    /// <remarks/>
    public void PauseAsync(object userState) {
        if ((this.PauseOperationCompleted == null)) {
            this.PauseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPauseOperationCompleted);
        }
        this.InvokeAsync("Pause", new object[0], this.PauseOperationCompleted, userState);
    }
    
    private void OnPauseOperationCompleted(object arg) {
        if ((this.PauseCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PauseCompleted(this, new PauseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://tempuri.org/ftp.xsd", ResponseNamespace="http://tempuri.org/ftp.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("response", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int Resume() {
        object[] results = this.Invoke("Resume", new object[0]);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginResume(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Resume", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public int EndResume(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void ResumeAsync() {
        this.ResumeAsync(null);
    }
    
    /// <remarks/>
    public void ResumeAsync(object userState) {
        if ((this.ResumeOperationCompleted == null)) {
            this.ResumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResumeOperationCompleted);
        }
        this.InvokeAsync("Resume", new object[0], this.ResumeOperationCompleted, userState);
    }
    
    private void OnResumeOperationCompleted(object arg) {
        if ((this.ResumeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ResumeCompleted(this, new ResumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://tempuri.org/ftp.xsd", ResponseNamespace="http://tempuri.org/ftp.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("response", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int Delete() {
        object[] results = this.Invoke("Delete", new object[0]);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDelete(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Delete", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public int EndDelete(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void DeleteAsync() {
        this.DeleteAsync(null);
    }
    
    /// <remarks/>
    public void DeleteAsync(object userState) {
        if ((this.DeleteOperationCompleted == null)) {
            this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
        }
        this.InvokeAsync("Delete", new object[0], this.DeleteOperationCompleted, userState);
    }
    
    private void OnDeleteOperationCompleted(object arg) {
        if ((this.DeleteCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://tempuri.org/ftp.xsd", ResponseElementName="State", ResponseNamespace="http://tempuri.org/ftp.xsd", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("total", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string GetState([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")] out string downloaded, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")] out string fsize, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")] out string fdownloaded, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out Status status, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string fname) {
        object[] results = this.Invoke("GetState", new object[0]);
        downloaded = ((string)(results[1]));
        fsize = ((string)(results[2]));
        fdownloaded = ((string)(results[3]));
        status = ((Status)(results[4]));
        fname = ((string)(results[5]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetState(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetState", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetState(System.IAsyncResult asyncResult, out string downloaded, out string fsize, out string fdownloaded, out Status status, out string fname) {
        object[] results = this.EndInvoke(asyncResult);
        downloaded = ((string)(results[1]));
        fsize = ((string)(results[2]));
        fdownloaded = ((string)(results[3]));
        status = ((Status)(results[4]));
        fname = ((string)(results[5]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetStateAsync() {
        this.GetStateAsync(null);
    }
    
    /// <remarks/>
    public void GetStateAsync(object userState) {
        if ((this.GetStateOperationCompleted == null)) {
            this.GetStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateOperationCompleted);
        }
        this.InvokeAsync("GetState", new object[0], this.GetStateOperationCompleted, userState);
    }
    
    private void OnGetStateOperationCompleted(object arg) {
        if ((this.GetStateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStateCompleted(this, new GetStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/ftp.xsd")]
public partial class ArrayOfFile {
    
    private string idField;
    
    private int statusField;
    
    private string pathField;
    
    private File[] itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public File[] item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/ftp.xsd")]
public partial class File {
    
    private string idField;
    
    private int statusField;
    
    private string nameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/ftp.xsd")]
public partial class Position {
    
    private string pathField;
    
    private string ipField;
    
    private string userField;
    
    private string pwdField;
    
    private int portField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string ip {
        get {
            return this.ipField;
        }
        set {
            this.ipField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string user {
        get {
            return this.userField;
        }
        set {
            this.userField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string pwd {
        get {
            return this.pwdField;
        }
        set {
            this.pwdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int port {
        get {
            return this.portField;
        }
        set {
            this.portField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/ftp.xsd")]
public enum Status {
    
    /// <remarks/>
    STOP,
    
    /// <remarks/>
    RUNNING,
    
    /// <remarks/>
    PAUSE,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void TransformCompletedEventHandler(object sender, TransformCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransformCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TransformCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void StopCompletedEventHandler(object sender, StopCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal StopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void StartCompletedEventHandler(object sender, StartCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal StartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void PauseCompletedEventHandler(object sender, PauseCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PauseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal PauseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void ResumeCompletedEventHandler(object sender, ResumeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ResumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ResumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]

public delegate void GetStateCompletedEventHandler(object sender, GetStateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string downloaded {

        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string fsize {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public string fdownloaded {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public Status status {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Status)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public string fname {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[5]));
        }
    }
}
